    // startPython = async () => {
    //     console.log(window.pyodide)
    //     const pyodide = await loadPyodide({ indexURL: PYODIDE_BASE_URL }) 
    //     return pyodide.loadPackage(['biopython'])
    //     // loadPyodide({ indexURL: PYODIDE_BASE_URL }).then((pyodide) => {
    //     //     globalThis.pyodide = pyodide      // you might also want to store pyodide globally so 
    //     //                                       // so you can access anywhere in the scope
    //     //     pyodide.loadPackage(['biopython']).then(() => {
    //     //       const output = pyodide.runPython(script);
    //     //       setSeqState(output)
    //     //   });});

    // }


        // runSomething = async (e) => {
    //     e.preventDefault()
    //     if (!this.python){
    //         this.python = await loadPyodide();
    //     }
    //     const output = this.python.runPython(script, {'input_seq': this.state.seq}) // loadPackage(['numpy'])
    //     console.log(output)
    //     this.setState(() => ({seq: output}))
    // }

    // import script from './python/script.py';

// const PYODIDE_BASE_URL = "https://cdn.jsdelivr.net/pyodide/v0.20.0/full/"

// async function main() {
//     let pyodide = await loadPyodide();
//     // Pyodide is now ready to use...
//     console.log(pyodide.runPython(`
//       import sys
//       sys.version
//     `));
//   };

//   main();


    //     const response = await fetch("./scripts/script.py");
    //     const script = await response.text()
    //     console.log(script)

    //     const context = {
    //         A_rank: [0.8, 0.4, 1.2, 3.7, 2.6, 5.8],
    //       }

    //     try {
    //         const { results, error } = await asyncRun(script, context);
    //         if (results) {
    //           console.log("pyodideWorker return results: ", results);
    //         } else if (error) {
    //           console.log("pyodideWorker error: ", error);
    //         }
    //       } catch (e) {
    //         console.log(
    //           `Error in pyodideWorker at ${e.filename}, Line: ${e.lineno}, ${e.message}`
    //         );
    //       }